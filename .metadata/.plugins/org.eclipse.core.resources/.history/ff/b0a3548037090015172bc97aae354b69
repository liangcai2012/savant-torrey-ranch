/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oauth2;

import com.etrade.etws.oauth.sdk.client.IOAuthClient;
import com.etrade.etws.oauth.sdk.client.OAuthClientImpl;
import com.etrade.etws.oauth.sdk.common.Token;
import com.etrade.etws.sdk.client.ClientRequest;
import com.etrade.etws.sdk.client.Environment;
import com.etrade.etws.sdk.common.ETWSException;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import static oauth2.OAuth2.Access_Token;
import static oauth2.OAuth2.GetVerifierCode;
import static oauth2.OAuth2.oauth_consumer_key;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.firefox.internal.ProfilesIni;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

/**
 *
 * @author kcai
 */
public class Login {
    static public void unit_test()
            {
                Login login = new Login();
                login.init();
                 Token oAuthToken;
             oAuthToken = login.getAcessToken();
             //String authorizeUrl = login.getAuthorizeUrl( oAuthToken);
             //String verifierCode = GetVerifierCode(authorizeUrl);
        
                
            }
    public void init()
    {
        client = OAuthClientImpl.getInstance(); // Instantiate IOAUthClient 
        request = new ClientRequest(); // Instantiate ClientRequest 
        request.setEnv(Environment.SANDBOX); // Use sandbox environment 
   
        
    }
     public Token getAcessToken() 
     {
     Token token = null;
     Token oAuthToken;
     oAuthToken = getOauthToken();
     String url = getAuthorizeUrl(oAuthToken);
     String verifierCode = GetVerifierCode(url);
    request.setVerifierCode(verifierCode);
        try {
            token = client.getAccessToken(request);
            Access_Token = token.getToken(); // Get token string 
            Access_Token_secret = token.getSecret(); // Get token secret 
            request.setToken(Access_Token); 
            request.setTokenSecret(Access_Token_secret);
    
        } catch (ETWSException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
         return token;    
     }
    private Token getOauthToken() //throws IOException
    {
        Token token = null;
        //IOAuthClient client = null;
        //ClientRequest request = null;        
             
    request = new ClientRequest(); // Instantiate ClientRequest 
    request.setEnv(Environment.SANDBOX); // Use sandbox environment 
    request.setConsumerKey(oauth_consumer_key); //Set consumer key 
    request.setConsumerSecret(oauth_consumer_secret); // Set consumer secret 
        try {
            token= client.getRequestToken(request); // Get request-token object
        } catch (ETWSException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return token;
    }
    String getAuthorizeUrl(Token oAuthToken)
    {
          String oauth_request_token = null; // Request token 
        String oauth_request_token_secret = null; 
      String authorizeURL = null; 
      
       oauth_request_token = oAuthToken.getToken(); // Get token string 
    oauth_request_token_secret = oAuthToken.getSecret(); // Get token secret             
    

    request.setToken(oauth_request_token);
    request.setTokenSecret(oauth_request_token_secret);
        try {  
            authorizeURL = client.getAuthorizeUrl(request);
        } catch (ETWSException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return authorizeURL;
    }
     static String GetVerifierCode2(String authorizeURL)
    {
         URI uri;
         Desktop desktop = Desktop.getDesktop(); 
        try {
            uri = new URI(authorizeURL);
             desktop.browse(uri);
        } catch (URISyntaxException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } 
        //id="txtPassword"
        // id="User"
         // name="Logon"
       
        String verifierCode= FileEx.read(verifierCodeFilePath);
        return verifierCode;
    
    }
      static void  sleep(long ms)
      {
        try {
            Thread.sleep(ms);
        } catch (InterruptedException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
      /***
       * Use selenium to auto login etrade account, and get the verification code.
       * @param authorizeURL
       * The url page used to get the verification code. 
       * @return 
       * the verification code generated by etrade website.
       */
     
     static String GetVerifierCode(String authorizeURL) {
          //String id_passwd ="txtPassword";
        //String id_user="User";
        //String  name_logon ="Logon";
        // Create a new instance of the html unit driver
        // Notice that the remainder of the code relies on the interface, 
        // not the implementation.
        //WebDriver driver = new HtmlUnitDriver();
         String verifierCode = "";
         ProfilesIni profile = new ProfilesIni();
         //profile.
 
         FirefoxProfile myprofile = profile.getProfile("etrade");
           //myprofile = null;
        //  WebDriver driver = new FirefoxDriver();
        WebDriver driver = new FirefoxDriver(myprofile);
        //WebDriver driver = new FirefoxDriver(null);
        //WebDriverWait wdw = new WebDriverWait(driver, 10);
        //By by = By.name(name_logon);
        //WebElement myDynamicElement = wdw.until(ExpectedConditions.presenceOfElementLocated(by));

        // And now use this to visit Google
        //String url = "https://us.etrade.com";
        driver.get(authorizeURL);
         String id_passwd ="txtPassword";
        String id_user="User";
        String  name_logon ="Logon";
       
        // sleep(2000);
        // WebDriverWait wait = new WebDriverWait(driver, 10); 
         boolean elementIsPresent;
         //elementIsPresent = wait.until(ExpectedConditions.elementToBeClickable(By.name(name_logon))); // true    
         ExpectedConditions.presenceOfElementLocated(By.id(id_passwd));

        // Find the text input element by its name
        WebElement element_user = driver.findElement(By.id(id_user));
        WebElement element_passwd = driver.findElement(By.id(id_passwd));
        WebElement element_logon = driver.findElement(By.name(name_logon));

        // Enter something to search for
        // must clear user input first.
        element_user.clear();
        element_user.sendKeys("zhiqinqi");
        // must not to clear password inputt.
        //element_passwd.clear();
        element_passwd.sendKeys("zc1726");
        

        // Now submit the form. WebDriver will find the form for us from the element
        element_logon.click();
        sleep(2000);
        // Handle [holiday alter web page] 
        String name_continue="continueButton";
        try
        {
          WebElement element_continue = driver.findElement(By.name(name_continue));
          if(element_continue!= null)
          {
          element_continue.click();
          sleep(2000);
          }
        }
        catch(Exception e)
        {
            System.out.println(e.toString());
        }
          
        String name="submit";         
        String type="text";
         WebElement element_accept = driver.findElement(By.name(name));

          //element_accept.submit();
           element_accept.click();
          /*sleep(5000);  
          String xpath_s="/html/body/div[2]/div/div[2]/form/input[2]"; 
          List<WebElement> elems = driver.findElements(By.name(name));
          WebElement element_accept2 = elems.get(0);
          //element_accept2.submit();
          element_accept2.click();
          //WebElement element_accept2 = driver.findElement(By.xpath(xpath_s));
           //   String v = element_accept2.getText();*/
          //element_accept2.submit();
           // Wait for 2 seconds to make sure the data is available
          sleep(2000); 
          // The xpath of the verifierCode
         String xpath_s2= "/html/body/div[2]/div/div/input";
          //ExpectedConditions.presenceOfElementLocated(By.xpath(xpath_s2));
           WebElement element_verifierCode = driver.findElement(By.xpath(xpath_s2));
           //WebDriverWait wait = new WebDriverWait(driver, 10);
            //WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.id("someid")));


           
          verifierCode = element_verifierCode.getAttribute("value");
          //verifierCode = element_verfiycode.toString();
        
       

        // Check the title of the page
        System.out.println("verifierCode is: " +verifierCode);

        //driver.quit();
        return verifierCode;
    }
     public ClientRequest getClientRequest()
     {
         return request;
     }
     IOAuthClient client = null;
     ClientRequest request = null;
     static String verifierCodeFilePath = "D:\\cai\\etradeAPI\\verifierCode.txt";
     static String oauth_consumer_key = "808968896f856e844d99c2bc0d4f8c71"; // Your consumer key
     static String oauth_consumer_secret = "bf659a9a86a1c6100ae4f630ea3cf3ea"; 
      static String Access_Token="";
     static String Access_Token_secret="";
    
}
